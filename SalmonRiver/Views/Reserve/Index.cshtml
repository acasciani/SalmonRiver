@model SalmonRiver.Models.TemporaryReservationViewModel

@{
    ViewBag.Title = "Complete Reservation";
    SalmonRiver.Models.SquareErrors squareErrors = ViewBag.SquareErrors as SalmonRiver.Models.SquareErrors;

    List<string> expErrors = new List<string>() { "CARD_EXPIRED", "INVALID_EXPIRATION", "INVALID_EXPIRATION_YEAR", "INVALID_EXPIRATION_DATE" };
    List<string> ccErrors = new List<string>() { "UNSUPPORTED_CARD_BRAND", "INVALID_CARD", "INVALID_CARD_DATA", "CARD_DECLINED", };
    List<string> cvvErrors = new List<string>() { "VERIFY_CVV_FAILURE" };
    List<string> avsErrors = new List<string>() { "VERIFY_AVS_FAILURE" };

    List<string> generalErrors = squareErrors == null ? new List<string>() : squareErrors.errors.Where(i => !expErrors.Contains(i.code) && !ccErrors.Contains(i.code) && !cvvErrors.Contains(i.code) && !avsErrors.Contains(i.code)).Select(i => i.detail).ToList();
}

@section scripts{
@if (squareErrors != null)
{
    <script type="text/javascript">
            @foreach (var squareError in squareErrors.errors)
            {
                string cardErrorJSCode = "$('{0} .validation-sq').removeClass('hidden');" +
                                    "$('{0}').removeClass('has-success');" +
                                    "$('{0}').addClass('has-error');" +
                                    "$('{0} .form-control-feedback').removeClass('glyphicon-ok');" +
                                    "$('{0} .form-control-feedback').addClass('glyphicon-remove');" +
                                    "if ({1}) {{ $('{0} .validation-sq').text('{2}'); }}";

                if (expErrors.Contains(squareError.code))
                {
                    //expiration error
                    @Html.Raw(string.Format(cardErrorJSCode, ".expiration-date", string.IsNullOrWhiteSpace(squareError.detail) ? "false" : "true", squareError.detail))
                }else
                if (ccErrors.Contains(squareError.code))
                {
                    //card number error
                    @Html.Raw(string.Format(cardErrorJSCode, ".card-number", string.IsNullOrWhiteSpace(squareError.detail) ? "false" : "true", squareError.detail))
                }else

                if (cvvErrors.Contains(squareError.code))
                {
                    //cvv validation error
                    @Html.Raw(string.Format(cardErrorJSCode, ".cvv", string.IsNullOrWhiteSpace(squareError.detail) ? "false" : "true", squareError.detail))
                }
                else if (avsErrors.Contains(squareError.code))
                {
                    //postal validation error
                    @Html.Raw(string.Format(cardErrorJSCode, ".postal-code", string.IsNullOrWhiteSpace(squareError.detail) ? "false" : "true", squareError.detail))
                }
            }

        if (generalErrors.Count() > 0) {
            @Html.Raw("$('#AlertBox').html(\"<div class='alert alert-danger alert-dismissible' role='alert' id='AlertBox'><button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button>'" +
                    "<div class='content'>An error occurred while trying to prepare your payment. Please try again and if the problem persists please contact us.</div></div>\");")
        }
    </script>
}

    <script type="text/javascript">
        $('#CancelHold').click(function () {
            $.post('/Reserve/CancelTemporaryHold', {}, function (data, status, xhr) {
                window.location.replace("/");
            }).fail(function () {

            });
        });
    </script>
    <script type="text/javascript" src="https://js.squareup.com/v2/paymentform"></script>

    <script>
        var paymentForm = new SqPaymentForm({
            applicationId: 'sandbox-sq0idp-0HutUDsnupbboc2BoBxPXQ', // <-- REQUIRED: Add Application ID
            inputClass: 'form-control',
            cardNumber: {
                elementId: 'sq-card-number',
                placeholder: '•••• •••• •••• ••••'
            },
            cvv: {
                elementId: 'sq-cvv',
            },
            expirationDate: {
                elementId: 'sq-expiration-date',
                placeholder: 'MM/YY'
            },
            postalCode: {
                elementId: 'sq-postal-code'
            },
            callbacks: {
                cardNonceResponseReceived: function (errors, nonce, cardData) {
                    if (errors) {
                        // handle errors
                        errors.forEach(function (error) {
                            switch (error.field) {
                                case 'cardNumber':
                                    $('.card-number .validation-sq').removeClass('hidden');
                                    $('.card-number').removeClass('has-success');
                                    $('.card-number').addClass('has-error');
                                    $('.card-number .form-control-feedback').removeClass('glyphicon-ok');
                                    $('.card-number .form-control-feedback').addClass('glyphicon-remove');
                                    if (error.message && error.message !== '') { $('.card-number .validation-sq').text(error.message); }
                                    break;

                                case 'expirationDate':
                                    $('.expiration-date .validation-sq').removeClass('hidden');
                                    $('.expiration-date').removeClass('has-success');
                                    $('.expiration-date').addClass('has-error');
                                    $('.expiration-date .form-control-feedback').removeClass('glyphicon-ok');
                                    $('.expiration-date .form-control-feedback').addClass('glyphicon-remove');
                                    if (error.message && error.message !== '') { $('.expiration-date .validation-sq').text(error.message); }
                                    break;

                                case 'cvv':
                                    $('.cvv .validation-sq').removeClass('hidden');
                                    $('.cvv').removeClass('has-success');
                                    $('.cvv').addClass('has-error');
                                    $('.cvv .form-control-feedback').removeClass('glyphicon-ok');
                                    $('.cvv .form-control-feedback').addClass('glyphicon-remove');
                                    if (error.message && error.message !== '') { $('.cvv .validation-sq').text(error.message); }
                                    break;

                                case 'postalCode':
                                    $('.postal-code .validation-sq').removeClass('hidden');
                                    $('.postal-code').removeClass('has-success');
                                    $('.postal-code').addClass('has-error');
                                    $('.postal-code .form-control-feedback').removeClass('glyphicon-ok');
                                    $('.postal-code .form-control-feedback').addClass('glyphicon-remove');
                                    if (error.message && error.message !== '') { $('.postal-code .validation-sq').text(error.message); }
                                    break;

                                default: break;
                            }

                            if (error.type != 'VALIDATION_ERROR') {
                                $('#AlertBox').html('<div class="alert alert-danger alert-dismissible" role="alert" id="AlertBox"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>' +
                                    '<div class="content">An error occurred while trying to prepare your payment. Please try again and if the problem persists please contact us.</div></div>');
                            }
                        });
                    } else {
                        // handle nonce
                        $('#CardNonce').val(nonce);
                        $("form").submit();
                    }
                },
                unsupportedBrowserDetected: function () {
                    alert('Your browser is not supported. Please contact us to make reservations.');
                }
            }
        });

        function requestCardNonce() {
            $('.billing-information .validation-sq').addClass('hidden');
            $('.billing-information .form-control-feedback').addClass('glyphicon-ok');
            $('.billing-information .form-control-feedback').removeClass('glyphicon-remove');
            $('.billing-information .has-feedback').removeClass('has-error');
            $('.billing-information .has-feedback').addClass('has-success');

            paymentForm.requestCardNonce();
            return false;
        }

        $(function () {
            $('.input-validation-error').each(function () {
                $(this).parent().addClass('has-error');
                $(this).siblings('.field-validation-error').addClass('text-danger');
                $(this).siblings('.glyphicon').addClass('glyphicon-remove');
            });
        });

        @if(Model != null){
            @Html.Raw("var localTime = moment.utc('" + Model.Expires.ToString("yyyy-MM-dd HH:mm:ss") + "').toDate();")
            @Html.Raw("localTime = moment(localTime).format('h:mm A');")
            @Html.Raw("$('.session-expires').text(localTime);")
        }
    </script>
}

@section styles {
    <style type="text/css">
        .checkin .dateinfo, .checkout .dateinfo {
            background-color: #f5f5f5;
            border-right: solid 1px #ddd;
        }

        .dateinfo .date {
            font-weight: bold;
        }

        .dateinfo .time {
            font-style: italic;
        }

        .checkin .description, .checkout .description {
            font-size: 1.3em;
        }

        .dl-horizontal.details-of-stay {
            margin-bottom: 0px;
        }

        .hidden {
            display: none;
        }
    </style>
}


@if (Model == null)
{
    <div class="container main-content">
        <div class="row">
            <div class="col-sm-12">
                <div class="alert alert-danger" role="alert">
                    You have not selected any dates or your session as expired. @Html.ActionLink("Please click here to book now.", "Index", "Home")
                </div>
            </div>
        </div>
    </div>
}
else
{
    <!-- alert box -->
    <div style="position: fixed; top: 20px; width: 100%; z-index: 1000">
        <div class="container-fluid" id="AlertBox">

        </div>
    </div>

    <div class="container main-content">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            for (int i = 0; i < Model.Holds.Count; i++)
            {
                @Html.HiddenFor(m => m.Holds[i].DateID)
                @Html.HiddenFor(m => m.Holds[i].Expiration)
                @Html.HiddenFor(m => m.Holds[i].HoldID)
                @Html.HiddenFor(m => m.Holds[i].Date.Date1)
                @Html.HiddenFor(m => m.Holds[i].Date.CheckIn)
                @Html.HiddenFor(m => m.Holds[i].Date.CheckOut)
                @Html.HiddenFor(m => m.Holds[i].Date.DateID)
                @Html.HiddenFor(m => m.Holds[i].Date.Holiday.Holiday1)
                @Html.HiddenFor(m => m.Holds[i].Date.IsActive)
            }
            @Html.HiddenFor(i => i.GuestCount)
            
            @Html.Hidden("CardNonce");

            <div class="row">
                <div class="col-sm-12">

                    <strong>Confirmation and Payment</strong> - Your session will expire at <span class="session-expires">N/A</span>. After that you will no longer have first priority to the dates you selected, unless you rebook. Please confirm and proceed to process your payment.
                </div>
            </div>


            <div class="row">
                <div class="col-sm-12">
                    <h2>Details About Your Stay</h2>
                </div>
                <div class="col-xs-8 col-sm-6">
                    <div class="row">
                        <div class="col-sm-12 checkin">
                            <div class="panel panel-default" style="background-color: #dff0d8;">
                                <div class="panel-body col-sm-6 col-md-4 text-center dateinfo">
                                    <div class="date text-center">@Model.Holds.OrderBy(i => i.Date.Date1).First().Date.CheckIn.ToString("ddd, MMMM d")</div>
                                    <div class="time text-center">@Model.Holds.OrderBy(i=>i.Date.Date1).First().Date.CheckIn.ToString("h:mm tt")</div>
                                </div>
                                <div class="panel-body col-sm-6 col-md-8 description text-center">Check In</div>
                                <div style="clear: both;"></div>
                            </div>
                        </div>

                        <div class="col-sm-12 checkout">
                            <div class="panel panel-default" style="background-color: #f2dede">
                                <div class="panel-body col-sm-6 col-md-4 text-center dateinfo">
                                    <div class="date text-center">@Model.Holds.OrderByDescending(i => i.Date.Date1).First().Date.CheckOut.ToString("ddd, MMMM d")</div>
                                    <div class="time text-center">@Model.Holds.OrderByDescending(i => i.Date.Date1).First().Date.CheckOut.ToString("h:mm tt")</div>
                                </div>
                                <div class="panel-body col-sm-6 col-md-8 description text-center">Check Out</div>
                                <div style="clear: both;"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-xs-4 col-sm-6">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <dl class="dl-horizontal details-of-stay">
                                <dt># of Guests:</dt>
                                <dd>@Model.GuestCount</dd>

                                <dt>Length of Stay:</dt>
                                <dd>@(Model.Holds.Count() == 1 ? "1 night" : Model.Holds.Count() + " nights")</dd>

                                <dt>Price Per Night:</dt>
                                <dd>@((Model.TotalCost / Model.Holds.Count()).ToString("C"))</dd>

                                <dt>Total Cost:</dt>
                                <dd>@(Model.TotalCost.ToString("C"))</dd>

                                <dt>Security Deposit:</dt>
                                <dd>@(Model.SecurityDeposit.ToString("C"))</dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>


            <div class="row">
                <div class="col-sm-12">
                    <h2>Contact Information</h2>
                </div>
                <div class="col-xs-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="form-group has-feedback">
                                <label for="FullName">Full Name</label>
                                @Html.TextBoxFor(i => i.FullName, new { @class = "form-control" })
                                <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                                @Html.ValidationMessageFor(i => i.FullName)
                            </div>
                            <div class="form-group has-feedback">
                                <label for="EmailAddress">Email Address</label>
                                @Html.TextBoxFor(i => i.EmailAddress, new {@class="form-control" })
                                <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                                @Html.ValidationMessageFor(i=>i.EmailAddress)
                            </div>
                            <div class="form-group has-feedback">
                                <label for="PhoneNumber">Phone Number</label>
                                @Html.TextBoxFor(i => i.PhoneNumber, new { @class = "form-control", @type = "tel" })
                                <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                                @Html.ValidationMessageFor(i => i.PhoneNumber)
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="row billing-information">
                <div class="col-sm-12">
                    <h2>Billing Information</h2>
                </div>
                <div class="col-xs-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-sm-8">
                                    <div class="form-group has-feedback card-number">
                                        <label for="CCNumber">Credit Card Number</label>
                                        <div id="sq-card-number"></div>
                                        <span class="glyphicon form-control-feedback" aria-hidden="true"></span>

                                        <span class="text-danger hidden validation-sq">An error occurred with your card number.</span>
                                    </div>
                                </div>
                                <div class="col-sm-4">
                                    <div class="form-group has-feedback cvv">
                                        <label for="CVV2">CVV</label>
                                        <div id="sq-cvv"></div>
                                        <span class="glyphicon form-control-feedback" aria-hidden="true"></span>

                                        <span class="text-danger hidden validation-sq">An error occurred with your card's CVV value.</span>
                                    </div>
                                </div>

                                <div class="col-sm-6">
                                    <div class="form-group has-feedback expiration-date">
                                        <label for="ExpirationMonth">Expiration Date</label>
                                        <div id="sq-expiration-date"></div>
                                        <span class="glyphicon form-control-feedback" aria-hidden="true"></span>

                                        <span class="text-danger hidden validation-sq">An error occurred with your card's expiration date.</span>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group has-feedback postal-code">
                                        <label for="sq-postal-code">Postal Code</label>

                                        <div id="sq-postal-code"></div>
                                        <span class="glyphicon form-control-feedback" aria-hidden="true"></span>

                                        <span class="text-danger hidden validation-sq">An error occurred with your postal code.</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <button type="submit" onclick="return requestCardNonce()" class="btn btn-default">
                        <span class="glyphicon glyphicon-credit-card"></span>&nbsp;Process Payment
                    </button>

                    <button type="button" class="btn btn-danger" id="CancelHold">
                        &nbsp;Cancel Reservation
                    </button>
                </div>
            </div>

        }

    </div>
}